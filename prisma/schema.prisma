// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  age            Int
  name           String
  email          String
  isAdmin        Boolean        @default(false)
  writtenPosts   Post[]         @relation("WrittenPost")
  favouirtePosts Post[]         @relation("FavouritePost")
  UserPrefrence  UserPrefrence?

  @@index([email])
}

model UserPrefrence {
  id           String  @id @default(uuid())
  emailUpdates Boolean @default(false)
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Post {
  id            String   @id @default(uuid())
  title         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  averageRating Float
  //mant to one
  authorId      String
  author        User     @relation("WrittenPost", fields: [authorId], references: [id])

  favoriteById String?
  favoritedBy  User?      @relation("FavouritePost", fields: [favoriteById], references: [id])
  categories   Category[]
}

model Category {
  id    String @id @default(uuid())
  name  String @unique
  posts Post[]
}
